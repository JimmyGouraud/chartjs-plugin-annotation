(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{540:function(t,e,o){"use strict";o.r(e);var n=o(26),v=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"label"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[t._v("#")]),t._v(" Label")]),t._v(" "),o("p",[t._v("Namespace: "),o("code",[t._v("options.annotations[annotationID].label")]),t._v(", it defines options for the the label of annotation.")]),t._v(" "),o("p",[t._v("All of these options can be "),o("RouterLink",{attrs:{to:"/guide/options.html#scriptable-options"}},[t._v("Scriptable")])],1),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Name")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("Default")]),t._v(" "),o("th",[t._v("Notes")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[o("code",[t._v("color")])]),t._v(" "),o("td",[o("RouterLink",{attrs:{to:"/guide/options.html#color"}},[o("code",[t._v("Color")])])],1),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("'black'")])]),t._v(" "),o("td",[t._v("Text color.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("content")])]),t._v(" "),o("td",[o("code",[t._v("string")]),t._v("|"),o("code",[t._v("string[]")]),t._v("|"),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image",target:"_blank",rel:"noopener noreferrer"}},[o("code",[t._v("Image")]),o("OutboundLink")],1),t._v("|"),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement",target:"_blank",rel:"noopener noreferrer"}},[o("code",[t._v("HTMLCanvasElement")]),o("OutboundLink")],1)]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("null")])]),t._v(" "),o("td",[t._v("The content to show in the label.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("display")])]),t._v(" "),o("td",[o("code",[t._v("boolean")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("false")])]),t._v(" "),o("td",[t._v("Whether or not the label is shown.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("drawTime")])]),t._v(" "),o("td",[o("code",[t._v("string")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("options.drawTime")])]),t._v(" "),o("td",[t._v("See "),o("RouterLink",{attrs:{to:"/guide/options.html#draw-time"}},[t._v("drawTime")]),t._v(". Defaults to the annotation draw time if unset")],1)]),t._v(" "),o("tr",[o("td",[o("code",[t._v("font")])]),t._v(" "),o("td",[o("RouterLink",{attrs:{to:"/guide/options.html#font"}},[o("code",[t._v("Font")])])],1),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("{ weight: 'bold' }")])]),t._v(" "),o("td",[t._v("Label font")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("height")])]),t._v(" "),o("td",[o("code",[t._v("number")]),t._v("|"),o("code",[t._v("string")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("undefined")])]),t._v(" "),o("td",[t._v("Overrides the height of the image or canvas element. Could be set in pixel by a number, or in percentage of current height of image or canvas element by a string. If undefined, uses the height of the image or canvas element. It is used only when the content is an image or canvas element.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("padding")])]),t._v(" "),o("td",[o("RouterLink",{attrs:{to:"/guide/options.html#padding"}},[o("code",[t._v("Padding")])])],1),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("6")])]),t._v(" "),o("td",[t._v("The padding to add around the text label.")])]),t._v(" "),o("tr",[o("td",[o("a",{attrs:{href:"#position"}},[o("code",[t._v("position")])])]),t._v(" "),o("td",[o("code",[t._v("string")]),t._v("|"),o("code",[t._v("{x: string, y: string}")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("'center'")])]),t._v(" "),o("td",[t._v("Anchor position of label in the annotation.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("rotation")])]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("undefined")])]),t._v(" "),o("td",[t._v("Rotation of label, in degrees. If "),o("code",[t._v("undefined")]),t._v(", the annotation rotation is used.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("textAlign")])]),t._v(" "),o("td",[o("code",[t._v("string")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("'start'")])]),t._v(" "),o("td",[t._v("Text alignment of label content when there's more than one line. Possible options are: "),o("code",[t._v("'left'")]),t._v(", "),o("code",[t._v("'start'")]),t._v(", "),o("code",[t._v("'center'")]),t._v(", "),o("code",[t._v("'end'")]),t._v(", "),o("code",[t._v("'right'")]),t._v(".")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("textStrokeColor")])]),t._v(" "),o("td",[o("RouterLink",{attrs:{to:"/guide/options.html#color"}},[o("code",[t._v("Color")])])],1),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("undefined")])]),t._v(" "),o("td",[t._v("The color of the stroke around the text.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("textStrokeWidth")])]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("0")])]),t._v(" "),o("td",[t._v("Stroke width around the text.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("width")])]),t._v(" "),o("td",[o("code",[t._v("number")]),t._v("|"),o("code",[t._v("string")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("undefined")])]),t._v(" "),o("td",[t._v("Overrides the width of the image or canvas element. Could be set in pixel by a number, or in percentage of current width of image or canvas element by a string. If undefined, uses the width of the image or canvas element. It is used only when the content is an image or canvas element.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("xAdjust")])]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("0")])]),t._v(" "),o("td",[t._v("Adjustment along x-axis (left-right) of label relative to computed position. Negative values move the label left, positive right.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("yAdjust")])]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("0")])]),t._v(" "),o("td",[t._v("Adjustment along y-axis (top-bottom) of label relative to computed position. Negative values move the label up, positive down.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("z")])]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("0")])]),t._v(" "),o("td",[t._v("It determines the drawing stack level of the label element, with same "),o("code",[t._v("drawTime")]),t._v(".")])])])]),t._v(" "),o("h3",{attrs:{id:"position"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" Position")]),t._v(" "),o("p",[t._v("A position can be set in 2 different values types:")]),t._v(" "),o("ol",[o("li",[o("code",[t._v("'start'")]),t._v(", "),o("code",[t._v("'center'")]),t._v(", "),o("code",[t._v("'end'")]),t._v(" which are defining where the label will be located")]),t._v(" "),o("li",[t._v("a "),o("code",[t._v("string")]),t._v(", in percentage format "),o("code",[t._v("'number%'")]),t._v(", is representing the percentage on the size where the label will be located")])]),t._v(" "),o("p",[t._v("If this value is a string (possible options are "),o("code",[t._v("'start'")]),t._v(", "),o("code",[t._v("'center'")]),t._v(", "),o("code",[t._v("'end'")]),t._v(" or a string in percentage format), it is applied to vertical and horizontal position in the annotation.")]),t._v(" "),o("p",[t._v("If this value is an object, the "),o("code",[t._v("x")]),t._v(" property defines the horizontal alignment in the annotation. Similarly, the "),o("code",[t._v("y")]),t._v(" property defines the vertical alignment in the annotation. Possible options for both properties are "),o("code",[t._v("'start'")]),t._v(", "),o("code",[t._v("'center'")]),t._v(", "),o("code",[t._v("'end'")]),t._v(", a string in percentage format. Omitted property have value of the default, "),o("code",[t._v("'center'")]),t._v(".")])])}),[],!1,null,null,null);e.default=v.exports}}]);